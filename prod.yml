# Version of docker-compose
version: '3'

# Containers we are going to run
services:
  web-client:
    env_file: .env
    build:
      context: ./app
      dockerfile: Dockerfile.web.prod
    links:
          - phoenix
    environment:
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY}
      S3_STATIC_BUCKET: ${S3_STATIC_BUCKET}
      API_HOST: ${API_HOST}
      API_PORT: ${API_PORT}
      NODE_ENV: ${NODE_ENV}
      DOCKER_ENABLED: ${DOCKER_ENABLED}
      CLOUDFRONT_DOMAIN_NAME: ${CLOUDFRONT_DOMAIN_NAME}
    ports:
      - "3000:3000"
    image:
        web-client:latest
    restart:
        on-failure
  # Our Phoenix container
  phoenix:
    env_file: .env
    # The build parameters for this container.
    build:
      # Here we define that it should build from the current directory
      context: .
      dockerfile: Dockerfile.prod
    environment:
      # Variables to connect to our Postgres server
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DATABASE: ${DB_NAME}
      POSTGRES_PORT: ${DB_PORT}
      POSTGRES_HOST: ${DB_HOST}
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY}
      S3_IMAGE_BUCKET_NAME: ${S3_IMAGE_BUCKET_NAME}
      GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY}
      GOOGLE_PLACES_BASE_URL: ${GOOGLE_PLACES_BASE_URL}
      MAILGUN_DOMAIN: ${MAILGUN_DOMAIN}
      MAILGUN_SANDBOX_DOMAIN: ${MAILGUN_SANDBOX_DOMAIN}
      MAILGUN_KEY: ${MAILGUN_KEY}

    ports:
      # Mapping the port to make the Phoenix app accessible outside of the container
      - "4000:4000"
    depends_on:
      # The db container needs to be started before we start this container
      - db
    image:
      phoenix:latest
    restart:
        on-failure
  db:
    # We use the predefined Postgres image
    image: postgres:10.3
    environment:
      # Set user/password for Postgres
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST: ${DB_HOST}
      # Set a path where Postgres should store the data
      PGDATA: /var/lib/postgresql/data/pgdata
    restart:
        always
    volumes:
      - pgdata:/var/lib/postgresql/data

  loadbalancer:
      build: ./nginx
      tty: true
      links:
          - web-client
          - phoenix
      ports:
          - '80:80'
      image:
        loadbalancer:latest
      restart:
        always
# Define the volumes
volumes:
  pgdata: